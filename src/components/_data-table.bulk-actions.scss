/*---------------------------------------------------------------------------*\
    
    Data table bulk actions (add-on)

    Extended functionality to component: Data table

\*---------------------------------------------------------------------------*/

// Breakpoints
@import "../includes/breakpoints";

// Bulk actions
section.bulk-actions {
    padding-left: var(--padding-buttons);
    border-left: 1px solid transparent;
    font-size: .875rem;

    // Master checkbox
    input[type=checkbox] {
        // Tri state
        &.partly:checked {
            background-image: url("data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 -960 960 960' width='24' height='24' fill='%2324292f'><rect fill='%2324292f' x='230' y='-530' width='500' height='100' /></svg>");
        }
    }
    // Hidden
    &.hidden {
        display: none !important;

        & + div.data, & + form > div.data {
            & > div.item > div:first-child {
                padding: 0 !important;

                input[type=checkbox] {
                    display: none;
                }
            }
        }
    }
    // Visible
    &:not(.hidden) {
        & + div.data, & + form > div.data {
            & > header {
                padding-left: calc(var(--padding-buttons) * 3 + 1.1rem);
            }

            @include for-phone-only {
                &.collapse > header {
                    padding-left: var(--padding-buttons);
                }
            }
        }
    }
    // Align
    &.align {
        --column-gap: calc(var(--padding-buttons) * 2);
    }

    p.hidden, details.hidden {
        display: none;
    }
}

// Bulk actions in header
div.data > header.bulk-actions {
    --column-gap: calc(var(--padding-buttons) * 2);
    background-color: transparent;
    padding-top: 0;
    border-radius: 0;
    border: none;

    section {
        padding-left: 0;
    }

    & + div.item > * {

        border-top: var(--border-light);

        &:first-child {
            border-top-left-radius: var(--border-radius-button);
        }

        &:last-child {
            border-top-right-radius: var(--border-radius-button);
        }
    }
}
@include for-phone-only {
    div.data.collapse > header.bulk-actions {
        & + div.item.headings + div.item, & + div.item:not(.headings) {
            border-top: var(--border-light);
            border-top-right-radius: var(--border-radius-button);
            border-top-left-radius: var(--border-radius-button);

            & > * {
                border: none;
                border-radius: 0;
            }
        }
    }
}